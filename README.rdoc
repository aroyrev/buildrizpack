= BuildrIzPack

A buildr plugin contributing a new packaging method to package your project as a IzPack installer.

This is for Buildr, the build system that lets you build like you code. see http://buildr.apache.org/

Some ideas/naming conventions were picked up from https://github.com/bmuschko/gradle-izpack-plugin.

== Getting Started

This plugin provides a one-stop solution for packaging, distributing and deploying applications for the Java platform using IzPack (http://izpack.org/). Before using it, install it via

  gem install BuildrIzPack

It has been tested using ruby-1.8.7-p352, jruby-1.6.5. Ruby 1.9 creates problem, which will probably be fixed once buildr 1.4.7 is out.

== Useages

There are the following different useages.

1. Include one or more files and let the BuildrIzPack build a simple installer, where you may choose the installation path. Default langues is 'eng'. The locales accepts an array of locale-identifiers (3-letters ISO code) 

2. Specifiy a IzPack installer-XML via the the input methods
3. Specify the XML-content of the various elements of the IzPack installation

===  Example 1: Simple, defaults

include one or more files and let the BuildrIzPack build a simple installer

  require 'buildrizpack'
  Buildr::write "example_1/src/main/java/Hello.java", "public class Hello {}"
  define 'example_1', :version => '0.9.8' do
    package(:jar)
    package(:izpack).locales = ['eng', 'fra', 'deu']
    package(:izpack).include(package(:jar))
  end

=== Example 2: Using  a IzPack installer-XML

Specifiy a IzPack installer-XML via the the input methods

  require 'buildrizpack'
  define 'example_2', :version => '0.9.8' do
    myInstXml = path_to(:target, 'myInstaller.xml')
    xm = Builder::XmlMarkup.new(:target=>File.open(myInstXml, 'w+'), :indent => 2)
    xm.instruct!
    xm.installation('version'=>'1.0') {
      xm.tag!('info') { xm.appversion(project.version); xm.appname(project.name) }
      xm.guiprefs('width' => '400', 'height' => '400', 'resizable' => 'no')
      xm.panels { |x| xm.panel('classname' => 'InstallPanel') }
      xm.locale { |x| xm.langpack('iso3'=>'eng') }
      xm.packs {
      xm.pack('name' => 'main', 'required' => 'yes') {
	xm.description("my first and only pack for #{project.name}")
	xm.file('src'=> myInstXml, 'targetdir' =>'$INSTALL_PATH')
	  }
	}
    }
    xm.target!().close
    package(:jar)
    # It is you responsability to specify correctly all dependencies!!
    package(:izpack).input = myInstXml
    package(:izpack)
  end


=== Example 3: Specify the XML-content

Specify the XML-content

  require 'buildrizpack'
  Buildr::write "example_3/src/main/java/Hello.java", "public class Hello {}"
  define 'example_3', :version => '0.9.8' do
    package(:jar)
    package(:izpack).locales = ['eng', 'fra', 'deu']
    Buildr.write(path_to(:target)+"/1_5.txt", "This is file 1_5.txt")
    Buildr.write(path_to(:target)+"/3_7.txt", "This is file 3_7.txt")
    pack = BuildrIzPack::Pack.new('myPackName', 'myPack description')
    myInstXml = path_to(:target, 'myInstaller.xml')
    pack.addFile(myInstXml)
    pack.addFile(path_to(:target)+"/1_5.txt")
    pack.addFile(path_to(:target)+"/3_7.txt", "$INSTALL_PATH/another_name")
    xm = Builder::XmlMarkup.new(:target=>File.open(myInstXml, 'w+'), :indent => 2)
    xm.instruct!
    xm.installation('version'=>'1.0') {
    xm.tag!('info') { xm.appversion(project.version); xm.appname(project.name) }
    xm.guiprefs('width' => '400', 'height' => '400', 'resizable' => 'no')
    xm.panels { |x| xm.panel('classname' => 'InstallPanel') }
    xm.locale { |x| xm.langpack('iso3'=>'eng') }
      xm.packs {
	pack.emitIzPackXML(xm)
	  }
    }
    xm.target!().close
    package(:izpack).input = myInstXml
    package(:izpack)
  end

== Living On the Edge

You can check the latest sources via:

  git clone git://github.com/ngiger/buildrizpack

To install BuildrIzPack locally from source:

  cd buildrizpack
  rake install

If the cutting edge doesn't work, make sure to check the CHANGELOG, to see
which changes might have broken your build.  To run all the test cases:

  rake spec

(Works only with ruby-1.8.7 not with jruby or ruby 1.9)
If you have any questions or suggestions for improvements you may reach me via E-Mail to mail:niklaus.giger@member.fsf.org

A continuos integration setup can be found under http://ngiger.dyndns.org/jenkins/job/buildrizpack/.


== License

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with this
work for additional information regarding copyright ownership.  The ASF
licenses this file to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.
